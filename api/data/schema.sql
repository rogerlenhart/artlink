DROP TABLE IF EXISTS usuario CASCADE;
DROP TABLE IF EXISTS permissao CASCADE;
DROP TABLE IF EXISTS publicacao CASCADE;
DROP TABLE IF EXISTS curtida CASCADE;
DROP TABLE IF EXISTS comentario CASCADE;
DROP TABLE IF EXISTS amizade CASCADE;

CREATE TABLE usuario (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  	nome VARCHAR(255) NOT NULL,
	email VARCHAR(255) NOT NULL,
	apelido VARCHAR(50),
	data_nascimento DATE NOT NULL,
	senha VARCHAR(128) NOT NULL,
	imagem_perfil VARCHAR(512),
	ativo BOOLEAN NOT NULL,
	CONSTRAINT pk_usuario PRIMARY KEY (id),
	CONSTRAINT uk_usuario_email UNIQUE (email)
);

CREATE TABLE permissao (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	funcao VARCHAR(100) NOT NULL,
	usuario_id BIGINT NOT NULL,
	CONSTRAINT pk_permissao PRIMARY KEY (id),
	CONSTRAINT uk_permissao UNIQUE (funcao, usuario_id),
	CONSTRAINT fk_permissao_usuario FOREIGN KEY (usuario_id) REFERENCES usuario
);

CREATE TABLE publicacao (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	autor_id BIGINT NOT NULL,
	titulo VARCHAR(100) NOT NULL,
	descricao TEXT NOT NULL,
	imagem VARCHAR(512) NOT NULL,
	data_criacao TIMESTAMP NOT NULL,
	privado BOOLEAN NOT NULL,
	CONSTRAINT pk_publicacao PRIMARY KEY (id),
	CONSTRAINT fk_publicacao_autor FOREIGN KEY (autor_id) REFERENCES usuario
);

CREATE TABLE curtida (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	usuario_id BIGINT NOT NULL,
	publicacao_id BIGINT NOT NULL,
	CONSTRAINT pk_curtida PRIMARY KEY (id),
	CONSTRAINT fk_curtida_usuario FOREIGN KEY (usuario_id) REFERENCES usuario,
	CONSTRAINT fk_curtida_publicacao FOREIGN KEY (publicacao_id) REFERENCES publicacao,
	CONSTRAINT uk_curtida UNIQUE (usuario_id, publicacao_id)
);

CREATE TABLE comentario (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	publicacao_id BIGINT NOT NULL,
	autor_id BIGINT NOT NULL,
	mensagem TEXT NOT NULL,
	data_criacao TIMESTAMP NOT NULL,
	CONSTRAINT pk_comentario PRIMARY KEY (id),
	CONSTRAINT fk_comentario_publicacao FOREIGN KEY (publicacao_id) REFERENCES publicacao,
	CONSTRAINT fk_comentario_autor FOREIGN KEY (autor_id) REFERENCES usuario
);

CREATE TABLE amizade (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	usuario_id BIGINT NOT NULL,
	amigo_id BIGINT NOT NULL,
	aceito BOOLEAN NOT NULL,
	CONSTRAINT pk_amizade PRIMARY KEY (id),
	CONSTRAINT fk_amizade_usuario FOREIGN KEY (usuario_id) REFERENCES usuario,
	CONSTRAINT fk_amizade_amigo FOREIGN KEY (amigo_id) REFERENCES usuario,
	CONSTRAINT uk_amizade UNIQUE (usuario_id, amigo_id)
)
